rules:
  # GET or DELETE operations MUST not have BODY in the request;
  bpi-request-get-no-body-oas3:
    message: GET or DELETE request MUST NOT accept a request body
    severity: "error"
    formats: [oas3]
    given: $.paths..[get,delete].requestBody
    then:
      function: undefined


  # Resource paths cant have more than two resources. Good Example: /weather-forecasts/{id}/location Bad Example: /weather-forecasts/{id}/location/{id}
  bpi-resource-path-depth-max-two:
    message: "Resource paths exceeded maximun depth of two resources. Example: /weather-forecasts/{id}/location"
    formats: ["oas2","oas3"]
    type: style
    severity: "warn"
    given: "$.paths[*]~"
    then:
      function: pattern
      functionOptions:
        match: '^((\/([a-zA-Z0-9]|-)*(\/{[a-zA-Z0-9]*})?){1,2})$'


  # Not allowed verbs outside this list [get, put, post or delete].
  bpi-not-allowed-verbs:
    message: "The verbs MUST be: [get, put, post or delete] and not: {{property}}."
    severity: error
    given: $.paths.*[?(@property !== 'get' && @property !== 'put' && @property !== 'post' && @property !== 'delete' && @property !== 'parameters' )]
    then:
      function: undefined

  # When there is a verb with id, the id can`t be other way than "id". Bad Example: idDescription.
  bpi-id-in-verbs:       
    message: Resource identifier MUST be id and not {{property}}
    severity: error
    given: $.paths[?(@property.indexOf("/{") !== -1 && @property.indexOf("/{id}") == -1)]~
    then:
      function: undefined

 # All responses verbs MUST be reference to any resource.
  bpi-validate-ref-verbs:
    message: In verbs MUST be references.
    given: $.paths..responses.[200,201,202,206,400,404,409,500].content.application/json.schema
    severity: error
    resolved: false
    then:
      field: $ref
      function: schema
      functionOptions:
        schema:
          items:
            type: object
            properties:
              $ref:
                type: string

 # In global resources the first object in allOf, MUST be a reference to designLibrary/common-body.yaml
  bpi-resource-common-body:
    message: Resource MUST reference($ref) designLibrary/common-body.yaml
    severity: error
    given: $.allOf[0]
    recommended: true
    type: "style"
    resolved: false
    then:
      function: schema
      functionOptions:
        schema:
          const:
            "$ref": 'https://stoplight.io/api/v1/projects/bancobpi/commons-api-definitions/nodes/models/common-body.yaml?deref=bundle'

 